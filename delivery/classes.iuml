@startuml
left to right direction

class Restaurante{
    -nome: String
    -endereco: String
    -telefone: String
    -cnpj: String
    -cardapio: Cardapio
    -horario_funcionamento: Time
    -funcionarios: Funcionario[]
}

class Cardapio{
    -lista_itens: Item[]
    -data_cadastro: DateTime
    +adicionar_item(item: Item): Cardapio
    +remover_item(item: Item): Cardapio
    +listar_itens()
    +buscar_item()
    +filtrar_itens()
}

class Item{
    -nome: String
    -descricao: String
    -preco: float
    +cadastrar_item(*dados): Item
    +remover_item()
    +atualizar_item()
}

class ItemPedido{
    -item: Item
    -quantidade: int
    definir_quantidade()
}

class Pedido{
    -lista_itens_pedidos: ItemPedido[]
    -valor_total: float
    -hora: Time
    -cliente: Cliente
    -pagamento: Pagamento
    -status: String
    +adicionar_item()
    +remover_item()
    +atualizar_status()
    +atualizar_pedido()
}

class Usuario{
    -nome: String
    -endereco: String
    -telefone: String
    -cpf: String
    -rg: String
}

class Cliente<Usuario>{
    -historico_pedidos: Pedido[]
    +monitorar_pedido() 
}

class Funcionario<Usuario>{
    -cargo: String
    -horario: Time
}

class Entregador<Usuario>{
    -novato: boolean
    -disponibilidade: boolean
    -historico_entregas: Entrega[]
    -classificacao: float
}

class Entrega{
    -status: String
    -pedido: Pedido
    -entregador: Entregador
    +atualizar_status()
}

class Pagamento{
    -forma_pagamento: String
    -valor: float
    -data_pagamento: Date
}

Cardapio "1"*--"1..*" Item: possui >
Pedido "1"*--"1..*" ItemPedido: possui >
ItemPedido "1"-up-"1" Item: possui >
Entrega "1"-left-"1" Pedido: possui > 
Cliente "1..*"--"1..*" Pedido: faz >
(Cliente, Pedido) .. Pagamento
Restaurante "1"-left-"1..*" Cardapio: possui >
Restaurante "1"-down-"0..*" Pedido: gerencia >
@enduml